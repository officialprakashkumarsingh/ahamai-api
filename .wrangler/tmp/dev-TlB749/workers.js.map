{
  "version": 3,
  "sources": ["../../../workers.js", "../../../../home/ubuntu/.nvm/versions/node/v22.16.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../home/ubuntu/.nvm/versions/node/v22.16.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-j9fLEU/middleware-insertion-facade.js", "../../../../home/ubuntu/.nvm/versions/node/v22.16.0/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-j9fLEU/middleware-loader.entry.ts"],
  "sourceRoot": "/workspace/.wrangler/tmp/dev-TlB749",
  "sourcesContent": ["const API_KEY = \"ahamaibyprakash25\";\n\nconst exposedToInternalMap = {\n  \"claude-3-5-sonnet\": \"anthropic/claude-3-5-sonnet\",\n  \"claude-3-7-sonnet\": \"anthropic/claude-3-7-sonnet\",\n  \"claude-sonnet-4\": \"anthropic/claude-sonnet-4\",\n  \"claude-3-5-sonnet-ashlynn\": \"ashlynn/claude-3-5-sonnet\"\n};\n\nconst modelRoutes = {\n  \"anthropic/claude-3-5-sonnet\": \"http://V1.s1.sdk.li/v1/chat/completions\",\n  \"anthropic/claude-3-7-sonnet\": \"http://V1.s1.sdk.li/v1/chat/completions\",\n  \"anthropic/claude-sonnet-4\": \"http://V1.s1.sdk.li/v1/chat/completions\",\n  \"ashlynn/claude-3-5-sonnet\": \"https://ai.ashlynn.workers.dev/ask\"\n};\n\nconst imageModelRoutes = {\n  \"flux\": {\n    provider: \"pollinations\",\n    baseUrl: \"https://image.pollinations.ai/prompt/\",\n    displayName: \"Flux - High Quality\",\n    width: 1024,\n    height: 1024\n  },\n  \"turbo\": {\n    provider: \"pollinations\",\n    baseUrl: \"https://image.pollinations.ai/prompt/\",\n    displayName: \"Turbo - Fast Generation\",\n    width: 1024,\n    height: 1024\n  }\n};\n\nexport default {\n  async fetch(request) {\n    const url = new URL(request.url);\n    const path = url.pathname;\n\n    // Auth check\n    const authHeader = request.headers.get(\"Authorization\");\n    if (!authHeader || authHeader !== `Bearer ${API_KEY}`) {\n      return new Response(JSON.stringify({ error: \"Unauthorized\" }), {\n        status: 401,\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n    }\n\n    if (path === \"/v1/chat/completions\" && request.method === \"POST\") {\n      return handleChat(request);\n    }\n\n    if (path === \"/v1/images/generations\" && request.method === \"POST\") {\n      return handleImage(request);\n    }\n\n    if (path === \"/v1/models\" && request.method === \"GET\") {\n      return handleModelList();\n    }\n\n    if (path === \"/v1/chat/models\" && request.method === \"GET\") {\n      return handleChatModelList();\n    }\n\n    if (path === \"/v1/images/models\" && request.method === \"GET\") {\n      return handleImageModelList();\n    }\n\n    return new Response(JSON.stringify({ error: \"Not found\" }), {\n      status: 404,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  }\n};\n\nasync function handleChat(request) {\n  const body = await request.json();\n  const exposedModel = body.model;\n  const internalModel = exposedToInternalMap[exposedModel];\n  const stream = body.stream === true;\n\n  if (!internalModel || !modelRoutes[internalModel]) {\n    return new Response(JSON.stringify({ error: `Model '${exposedModel}' is not supported.` }), {\n      status: 400,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  }\n\n  // Handle ashlynn endpoint differently\n  if (internalModel === \"ashlynn/claude-3-5-sonnet\") {\n    return handleAshlynn(body, stream);\n  }\n\n  // Prepare headers based on the model\n  const headers = { \"Content-Type\": \"application/json\" };\n\n  const response = await fetch(modelRoutes[internalModel], {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({ ...body, model: internalModel })\n  });\n\n  return stream\n    ? new Response(response.body, {\n        status: response.status,\n        headers: {\n          \"Content-Type\": \"text/event-stream\",\n          \"Transfer-Encoding\": \"chunked\",\n          \"Cache-Control\": \"no-cache\"\n        }\n      })\n    : new Response(await response.text(), {\n        status: response.status,\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n}\n\nasync function handleAshlynn(body, stream) {\n  // Extract the user message from the OpenAI format\n  const messages = body.messages || [];\n  const lastMessage = messages[messages.length - 1];\n  const prompt = lastMessage?.content || \"\";\n  \n  if (!prompt) {\n    return new Response(JSON.stringify({ error: \"No prompt provided\" }), {\n      status: 400,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  }\n\n  // Make request to ashlynn endpoint with Claude 3.5 Sonnet\n  const encodedPrompt = encodeURIComponent(prompt);\n  const ashlynnUrl = `https://ai.ashlynn.workers.dev/ask?prompt=${encodedPrompt}&model=Claude+3.5+Sonnet`;\n  \n  try {\n    const response = await fetch(ashlynnUrl);\n    const data = await response.json();\n    \n    if (!data.success) {\n      return new Response(JSON.stringify({ error: data.error || \"Request failed\" }), {\n        status: 400,\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n    }\n\n    // Convert to OpenAI format\n    const openaiResponse = {\n      id: `chatcmpl-${Date.now()}`,\n      object: \"chat.completion\",\n      created: Math.floor(Date.now() / 1000),\n      model: \"claude-3-5-sonnet-ashlynn\",\n      choices: [{\n        index: 0,\n        message: {\n          role: \"assistant\",\n          content: data.response\n        },\n        finish_reason: \"stop\"\n      }],\n      usage: {\n        prompt_tokens: prompt.length,\n        completion_tokens: data.response.length,\n        total_tokens: prompt.length + data.response.length\n      }\n    };\n\n    if (stream) {\n      // For streaming, create a simple stream with the complete response\n      const streamData = `data: ${JSON.stringify({\n        id: openaiResponse.id,\n        object: \"chat.completion.chunk\",\n        created: openaiResponse.created,\n        model: \"claude-3-5-sonnet-ashlynn\",\n        choices: [{\n          index: 0,\n          delta: {\n            role: \"assistant\",\n            content: data.response\n          },\n          finish_reason: \"stop\"\n        }]\n      })}\\n\\ndata: [DONE]\\n\\n`;\n\n      return new Response(streamData, {\n        status: 200,\n        headers: {\n          \"Content-Type\": \"text/event-stream\",\n          \"Cache-Control\": \"no-cache\",\n          \"Connection\": \"keep-alive\"\n        }\n      });\n    }\n\n    return new Response(JSON.stringify(openaiResponse), {\n      status: 200,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n\n  } catch (error) {\n    return new Response(JSON.stringify({ error: \"Failed to process request\" }), {\n      status: 500,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  }\n}\n\nasync function handleImage(request) {\n  const body = await request.json();\n  const model = body.model || \"flux\";\n  const prompt = encodeURIComponent(body.prompt || \"\");\n\n  if (!imageModelRoutes[model]) {\n    return new Response(JSON.stringify({ error: `Image model '${model}' is not supported.` }), {\n      status: 400,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  }\n\n  const { baseUrl } = imageModelRoutes[model];\n\n  const params = new URLSearchParams({\n    model,\n    width: body.width || 1024,\n    height: body.height || 1024,\n    seed: body.seed || \"\",\n    image: body.image || \"\",\n    private: \"true\",\n    enhance: body.enhance ? \"true\" : \"false\",\n    safe: body.safe ? \"true\" : \"false\",\n    transparent: body.transparent ? \"true\" : \"false\",\n    nologo: \"true\",\n    referrer: \"aham-ai\"\n  });\n\n  const imageUrl = `${baseUrl}${prompt}?${params.toString()}`;\n  const imageRes = await fetch(imageUrl);\n\n  return new Response(imageRes.body, {\n    status: imageRes.status,\n    headers: {\n      \"Content-Type\": imageRes.headers.get(\"Content-Type\") || \"image/jpeg\",\n      \"Transfer-Encoding\": \"chunked\"\n    }\n  });\n}\n\nfunction handleModelList() {\n  const chatModels = Object.keys(exposedToInternalMap).map((id) => ({\n    id,\n    object: \"model\",\n    owned_by: \"openai-compatible\"\n  }));\n\n  const imageModels = Object.keys(imageModelRoutes).map((id) => ({\n    id,\n    object: \"image-model\",\n    owned_by: \"pollinations\"\n  }));\n\n  return new Response(JSON.stringify({\n    object: \"list\",\n    data: [...chatModels, ...imageModels]\n  }), {\n    headers: { \"Content-Type\": \"application/json\" }\n  });\n}\n\nfunction handleChatModelList() {\n  const chatModels = Object.keys(exposedToInternalMap).map((id) => ({\n    id,\n    object: \"model\",\n    owned_by: \"openai-compatible\"\n  }));\n\n  return new Response(JSON.stringify({\n    object: \"list\",\n    data: chatModels\n  }), {\n    headers: { \"Content-Type\": \"application/json\" }\n  });\n}\n\nfunction handleImageModelList() {\n  const models = Object.entries(imageModelRoutes).map(([id, meta]) => ({\n    id,\n    object: \"image-model\",\n    provider: meta.provider,\n    name: meta.displayName,\n    width: meta.width,\n    height: meta.height\n  }));\n\n  return new Response(JSON.stringify({\n    object: \"list\",\n    data: models\n  }), {\n    headers: { \"Content-Type\": \"application/json\" }\n  });\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/workspace/workers.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/ubuntu/.nvm/versions/node/v22.16.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/ubuntu/.nvm/versions/node/v22.16.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/workspace/workers.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/workspace/.wrangler/tmp/bundle-j9fLEU/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/ubuntu/.nvm/versions/node/v22.16.0/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/workspace/.wrangler/tmp/bundle-j9fLEU/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/workspace/.wrangler/tmp/bundle-j9fLEU/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;AAAA,IAAM,UAAU;AAEhB,IAAM,uBAAuB;AAAA,EAC3B,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,mBAAmB;AAAA,EACnB,6BAA6B;AAC/B;AAEA,IAAM,cAAc;AAAA,EAClB,+BAA+B;AAAA,EAC/B,+BAA+B;AAAA,EAC/B,6BAA6B;AAAA,EAC7B,6BAA6B;AAC/B;AAEA,IAAM,mBAAmB;AAAA,EACvB,QAAQ;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,aAAa;AAAA,IACb,OAAO;AAAA,IACP,QAAQ;AAAA,EACV;AAAA,EACA,SAAS;AAAA,IACP,UAAU;AAAA,IACV,SAAS;AAAA,IACT,aAAa;AAAA,IACb,OAAO;AAAA,IACP,QAAQ;AAAA,EACV;AACF;AAEA,IAAO,kBAAQ;AAAA,EACb,MAAM,MAAM,SAAS;AACnB,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,OAAO,IAAI;AAGjB,UAAM,aAAa,QAAQ,QAAQ,IAAI,eAAe;AACtD,QAAI,CAAC,cAAc,eAAe,UAAU,OAAO,IAAI;AACrD,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,eAAe,CAAC,GAAG;AAAA,QAC7D,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH;AAEA,QAAI,SAAS,0BAA0B,QAAQ,WAAW,QAAQ;AAChE,aAAO,WAAW,OAAO;AAAA,IAC3B;AAEA,QAAI,SAAS,4BAA4B,QAAQ,WAAW,QAAQ;AAClE,aAAO,YAAY,OAAO;AAAA,IAC5B;AAEA,QAAI,SAAS,gBAAgB,QAAQ,WAAW,OAAO;AACrD,aAAO,gBAAgB;AAAA,IACzB;AAEA,QAAI,SAAS,qBAAqB,QAAQ,WAAW,OAAO;AAC1D,aAAO,oBAAoB;AAAA,IAC7B;AAEA,QAAI,SAAS,uBAAuB,QAAQ,WAAW,OAAO;AAC5D,aAAO,qBAAqB;AAAA,IAC9B;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,YAAY,CAAC,GAAG;AAAA,MAC1D,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AACF;AAEA,eAAe,WAAW,SAAS;AACjC,QAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,QAAM,eAAe,KAAK;AAC1B,QAAM,gBAAgB,qBAAqB,YAAY;AACvD,QAAM,SAAS,KAAK,WAAW;AAE/B,MAAI,CAAC,iBAAiB,CAAC,YAAY,aAAa,GAAG;AACjD,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,UAAU,YAAY,sBAAsB,CAAC,GAAG;AAAA,MAC1F,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAGA,MAAI,kBAAkB,6BAA6B;AACjD,WAAO,cAAc,MAAM,MAAM;AAAA,EACnC;AAGA,QAAM,UAAU,EAAE,gBAAgB,mBAAmB;AAErD,QAAM,WAAW,MAAM,MAAM,YAAY,aAAa,GAAG;AAAA,IACvD,QAAQ;AAAA,IACR;AAAA,IACA,MAAM,KAAK,UAAU,EAAE,GAAG,MAAM,OAAO,cAAc,CAAC;AAAA,EACxD,CAAC;AAED,SAAO,SACH,IAAI,SAAS,SAAS,MAAM;AAAA,IAC1B,QAAQ,SAAS;AAAA,IACjB,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,qBAAqB;AAAA,MACrB,iBAAiB;AAAA,IACnB;AAAA,EACF,CAAC,IACD,IAAI,SAAS,MAAM,SAAS,KAAK,GAAG;AAAA,IAClC,QAAQ,SAAS;AAAA,IACjB,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,EAChD,CAAC;AACP;AAxCe;AA0Cf,eAAe,cAAc,MAAM,QAAQ;AAEzC,QAAM,WAAW,KAAK,YAAY,CAAC;AACnC,QAAM,cAAc,SAAS,SAAS,SAAS,CAAC;AAChD,QAAM,SAAS,aAAa,WAAW;AAEvC,MAAI,CAAC,QAAQ;AACX,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC,GAAG;AAAA,MACnE,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAGA,QAAM,gBAAgB,mBAAmB,MAAM;AAC/C,QAAM,aAAa,6CAA6C,aAAa;AAE7E,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,UAAU;AACvC,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,QAAI,CAAC,KAAK,SAAS;AACjB,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,KAAK,SAAS,iBAAiB,CAAC,GAAG;AAAA,QAC7E,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD,CAAC;AAAA,IACH;AAGA,UAAM,iBAAiB;AAAA,MACrB,IAAI,YAAY,KAAK,IAAI,CAAC;AAAA,MAC1B,QAAQ;AAAA,MACR,SAAS,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AAAA,MACrC,OAAO;AAAA,MACP,SAAS,CAAC;AAAA,QACR,OAAO;AAAA,QACP,SAAS;AAAA,UACP,MAAM;AAAA,UACN,SAAS,KAAK;AAAA,QAChB;AAAA,QACA,eAAe;AAAA,MACjB,CAAC;AAAA,MACD,OAAO;AAAA,QACL,eAAe,OAAO;AAAA,QACtB,mBAAmB,KAAK,SAAS;AAAA,QACjC,cAAc,OAAO,SAAS,KAAK,SAAS;AAAA,MAC9C;AAAA,IACF;AAEA,QAAI,QAAQ;AAEV,YAAM,aAAa,SAAS,KAAK,UAAU;AAAA,QACzC,IAAI,eAAe;AAAA,QACnB,QAAQ;AAAA,QACR,SAAS,eAAe;AAAA,QACxB,OAAO;AAAA,QACP,SAAS,CAAC;AAAA,UACR,OAAO;AAAA,UACP,OAAO;AAAA,YACL,MAAM;AAAA,YACN,SAAS,KAAK;AAAA,UAChB;AAAA,UACA,eAAe;AAAA,QACjB,CAAC;AAAA,MACH,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAEF,aAAO,IAAI,SAAS,YAAY;AAAA,QAC9B,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,iBAAiB;AAAA,UACjB,cAAc;AAAA,QAChB;AAAA,MACF,CAAC;AAAA,IACH;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU,cAAc,GAAG;AAAA,MAClD,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EAEH,SAAS,OAAO;AACd,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,4BAA4B,CAAC,GAAG;AAAA,MAC1E,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AACF;AAvFe;AAyFf,eAAe,YAAY,SAAS;AAClC,QAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,QAAM,QAAQ,KAAK,SAAS;AAC5B,QAAM,SAAS,mBAAmB,KAAK,UAAU,EAAE;AAEnD,MAAI,CAAC,iBAAiB,KAAK,GAAG;AAC5B,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,gBAAgB,KAAK,sBAAsB,CAAC,GAAG;AAAA,MACzF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAEA,QAAM,EAAE,QAAQ,IAAI,iBAAiB,KAAK;AAE1C,QAAM,SAAS,IAAI,gBAAgB;AAAA,IACjC;AAAA,IACA,OAAO,KAAK,SAAS;AAAA,IACrB,QAAQ,KAAK,UAAU;AAAA,IACvB,MAAM,KAAK,QAAQ;AAAA,IACnB,OAAO,KAAK,SAAS;AAAA,IACrB,SAAS;AAAA,IACT,SAAS,KAAK,UAAU,SAAS;AAAA,IACjC,MAAM,KAAK,OAAO,SAAS;AAAA,IAC3B,aAAa,KAAK,cAAc,SAAS;AAAA,IACzC,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ,CAAC;AAED,QAAM,WAAW,GAAG,OAAO,GAAG,MAAM,IAAI,OAAO,SAAS,CAAC;AACzD,QAAM,WAAW,MAAM,MAAM,QAAQ;AAErC,SAAO,IAAI,SAAS,SAAS,MAAM;AAAA,IACjC,QAAQ,SAAS;AAAA,IACjB,SAAS;AAAA,MACP,gBAAgB,SAAS,QAAQ,IAAI,cAAc,KAAK;AAAA,MACxD,qBAAqB;AAAA,IACvB;AAAA,EACF,CAAC;AACH;AAtCe;AAwCf,SAAS,kBAAkB;AACzB,QAAM,aAAa,OAAO,KAAK,oBAAoB,EAAE,IAAI,CAAC,QAAQ;AAAA,IAChE;AAAA,IACA,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ,EAAE;AAEF,QAAM,cAAc,OAAO,KAAK,gBAAgB,EAAE,IAAI,CAAC,QAAQ;AAAA,IAC7D;AAAA,IACA,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ,EAAE;AAEF,SAAO,IAAI,SAAS,KAAK,UAAU;AAAA,IACjC,QAAQ;AAAA,IACR,MAAM,CAAC,GAAG,YAAY,GAAG,WAAW;AAAA,EACtC,CAAC,GAAG;AAAA,IACF,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,EAChD,CAAC;AACH;AAnBS;AAqBT,SAAS,sBAAsB;AAC7B,QAAM,aAAa,OAAO,KAAK,oBAAoB,EAAE,IAAI,CAAC,QAAQ;AAAA,IAChE;AAAA,IACA,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ,EAAE;AAEF,SAAO,IAAI,SAAS,KAAK,UAAU;AAAA,IACjC,QAAQ;AAAA,IACR,MAAM;AAAA,EACR,CAAC,GAAG;AAAA,IACF,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,EAChD,CAAC;AACH;AAbS;AAeT,SAAS,uBAAuB;AAC9B,QAAM,SAAS,OAAO,QAAQ,gBAAgB,EAAE,IAAI,CAAC,CAAC,IAAI,IAAI,OAAO;AAAA,IACnE;AAAA,IACA,QAAQ;AAAA,IACR,UAAU,KAAK;AAAA,IACf,MAAM,KAAK;AAAA,IACX,OAAO,KAAK;AAAA,IACZ,QAAQ,KAAK;AAAA,EACf,EAAE;AAEF,SAAO,IAAI,SAAS,KAAK,UAAU;AAAA,IACjC,QAAQ;AAAA,IACR,MAAM;AAAA,EACR,CAAC,GAAG;AAAA,IACF,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,EAChD,CAAC;AACH;AAhBS;;;ACvRT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAM,QAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAK,OAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACA,KACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAAS,KAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAAS,KAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAY,KAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAAS,KAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACA,KACA,QACI;AACJ,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": []
}
